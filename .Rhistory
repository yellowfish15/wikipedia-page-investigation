y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x > 1.48), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z < -1.35)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x > -0.4 & x < 1.5), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z < -1.35)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x > -0.4 & x < 1.5), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (-0.4 < Z < 1.5)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x > 1.48), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z > 1.48)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x < 2 | x > 2), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z > 1.48)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x < 2 & x > 2), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z > 1.48)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x < 2 || x > 2), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z > 1.48)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x < -2 | x > 2), aes(fill = "Area (Z < -1.35)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z > 1.48)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x < -2 | x > 2), aes(fill = "Area (|Z| > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (Z > 1.48)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-4, 4, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x < -2 | x > 2), aes(fill = "Area (|Z| > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-4, 4, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, abs(x) > 2), aes(fill = "Area (|Z| > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-4, 4, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, abs(y) > 2), aes(fill = "Area (|Z| > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-4, 4, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, abs(x) > 2), aes(fill = "Area (|Z| > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, abs(x) > 2), aes(fill = "Area (|Z| > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
geom_area(data = subset(data, x < -2), aes(fill = "Area (Z < -2)"), alpha = 0.5) +
geom_area(data = subset(data, x > 2), aes(fill = "Area (Z > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
# Shade the left tail (Z < -2)
geom_area(data = subset(data, x < -2), aes(fill = "Area (Z < -2)"), alpha = 0.5) +
# Shade the right tail (Z > 2)
geom_area(data = subset(data, x > 2), aes(fill = "Area (Z > 2)"), alpha = 0.5) +
scale_fill_manual(values = "lightblue") +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
# Load necessary library
library(ggplot2)
# Define parameters for the normal distribution
mean <- 0
sd <- 1
# Create a sequence of x values from -4 to 4
x_values <- seq(-3, 3, length.out = 1000)
# Calculate the normal density for these x values
y_values <- dnorm(x_values, mean, sd)
# Create a data frame for ggplot
data <- data.frame(x = x_values, y = y_values)
# Create the plot
p <- ggplot(data, aes(x = x, y = y)) +
geom_line() +
# Shade the left tail (Z < -2)
geom_area(data = subset(data, x < -2), aes(fill = "Area (Z < -2)"), alpha = 0.5) +
# Shade the right tail (Z > 2)
geom_area(data = subset(data, x > 2), aes(fill = "Area (Z > 2)"), alpha = 0.5) +
scale_fill_manual(values = c("Area (Z < -2)" = "lightblue", "Area (Z > 2)" = "lightblue")) +
labs(title = "Normal Distribution (|Z| > 2)",
x = "Z-score",
y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Show the plot
print(p)
pnorm(1.089)
pnorm(0.312)
qnorm(.95)
qnorm(.1)
qnorm(.05)
qnorm(.9)
pnorm(-0.4454)
qnorm(.85)
qnorm(.815)
pnorm(-0.91287)
pnorm(1.96)
pnorm(1.13227703414)
pnorm(1.96)
1-2*(1-pnorm(1.13227703414))
1-2*(1-pnorm(1.96))
qnorm(.95)
pt(-3, df=2)
2*pt(-3, df=2)
pt(-1.65, df=20)
pt(.975, df=18)
qt(.975, df=18)
pt(2.37, df=99)
1-pt(2.37, df=99)
2*(1-pt(2.37, df=99))
qt(.975, df=99)
97.32-qt(.975, df=99)*1.7
qnorm(.95, df=5)
qt(.95, df=5)
qt(.99, df=20)
qt(.975, df=28)
qt(.995, df=11)
qnorm(.975, df=35)
qt(.975, df=35)
qnorm(.975, df=19)
qt(.975, df=19)
qnorm(.95)
(10*qnorm(.95))^2
qnorm(.95)
100*qnorm(.95)^2
qnorm(.995)
100*qnorm(.995)^2
qnorm(-8.9)
2*pnorm(-8.9)
qnorm(-2.576)
pnorm(-2.576)
qnorm(0.005)
pnorm(-2.575829)
2*pnorm(3.70970413401)
2*pnorm(-3.70970413401)
pnorm(-0.72773621594)
dt(-1.75324675325, 24)
pt(-1.75324675325, 24)
qt(.95, 24)
qt(0.025, df=19)
pt(-0.81311562818,19)
qt(.975, df=19)
2*pt(-17.0666581836, df=51)
2*pnorm(-2.977369)
pnorm(-0.86727398615)
pnorm(-0.86727398615)*2
pf(-2.81988060276)
pf(-2.81988060276, 22)
pf(-2.81988060276, df=22)
pt(-2.81988060276, df=22)
2*pt(-2.81988060276, df=22)
qt(.975, df=22)
2*pt(-3.30301971347, df=25)
qnorm(.975)
pnorm(.9)
qnorm(.9)
qnorm(.8)
pnorm(.975)
qnorm(.975)
qnorm(.95)
2*pt(-3.60677827951, df=28)
2*pnorm(-5.91213436864)
# Load required libraries
library(ggplot2)
# Read the data from the CSV file
setwd("C:/Users/conta/Downloads/Intro to Statistics/wikipedia-page-investigation/")
data <- read.csv("raw_data.csv")
# Create the scatter plot of links_count vs page_views
ggplot(data, aes(x = links_count, y = page_views)) +
geom_point(color = "blue", alpha = 0.6) +  # Scatter plot with blue points
labs(title = "Scatter Plot of Links Count vs Page Views",
x = "Links Count",
y = "Page Views") +
theme_minimal() +  # Use a clean theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title = element_text(size = 12),    # Adjust axis title size
axis.text = element_text(size = 10)      # Adjust axis text size
)
# Load required libraries
library(ggplot2)
# Read the data from the CSV file
setwd("C:/Users/conta/Downloads/Intro to Statistics/wikipedia-page-investigation/")
data <- read.csv("raw_data.csv")
# Create the scatter plot of links_count vs page_views with log scale on y-axis
ggplot(data, aes(x = links_count, y = page_views)) +
geom_point(color = "blue", alpha = 0.6) +  # Scatter plot with blue points
labs(title = "Scatter Plot of Links Count vs Page Views",
x = "Links Count",
y = "Page Views (Log Scale)") +  # Update y-axis label
scale_y_log10() +  # Apply log scale to y-axis
theme_minimal() +  # Use a clean theme
theme(
plot.title = element_text(hjust = 0.5),  # Center the title
axis.title = element_text(size = 12),    # Adjust axis title size
axis.text = element_text(size = 10)      # Adjust axis text size
)
